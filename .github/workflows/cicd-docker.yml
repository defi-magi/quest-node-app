name: CI/CD

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout source code
        uses: 'actions/checkout@v3'
        with:
          ref: ${{ github.ref }}

      - name: Automated Version Bump
        id: version-bump
        uses: 'phips28/gh-action-bump-version@v9.0.20'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output Step
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.version-bump.outputs.newTag }}
  cd:
    runs-on: ubuntu-latest
    steps:
      - name: Download repository
        uses: actions/download-artifact@v2
        with:
          name: repository
      - name: Create kube config
        run: |
          mkdir -p $HOME/.kube/
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
      - name: Install helm
        run: |
          curl -LO https://get.helm.sh/helm-v3.8.0-linux-amd64.tar.gz
          tar -zxvf helm-v3.8.0-linux-amd64.tar.gz
          mv linux-amd64/helm /usr/local/bin/helm
          helm version
      - name: Lint helm charts
        run: helm lint ./helm/
      - name: Deploy
        run: |
          helm dependency build ./helm
          helm upgrade --install --atomic --timeout 1m rest ./helm/ -f ./helm/values.yaml \
            --kube-context nonprod --namespace develop --set image.tag=v${{ env.NEW_TAG }}