name: Docker                                           # Name of the workflow

on:
  push:
    branches: [ main ]                                 # Workflow to run only when changes are made to `main` branch

env:
  REGISTRY: ghcr.io                                  # Image registry, ghcr.io incase of GitHub Container Registry
  IMAGE_NAME: ${{ github.repository }}                 # Name of the image comes from the repository name

jobs:
  release:
    runs-on: ubuntu-latest                            # GitHub Runner OS
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout source code                    # Checksout the repository in the GitHub runner
        uses: 'actions/checkout@v2'                   
        with:
          ref: ${{ github.ref }}

      - name: Automated Version Bump                  # This action step reads and updates the version number acc to commit message
        id: version-bump
        uses: 'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output Step                             # Optional: Prints the new version
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"

      - name: Log into registry ${{ env.REGISTRY }}   # Log into the container registry from GitHub runner
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}              # Uses the env defined above
          username: ${{ github.actor }}   # GitHub Secret added to the repository
          password: ${{ secrets.GITHUB_TOKEN }}   # GitHub Secret added to the repository

      - name: Build and push Docker image            # Builds and pushes the image to the conatiner registry
        uses: docker/build-push-action@v2
        with:
          context: ./                          # Folder where the Dockerfile resides, use `/` if in root path
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_NAME }}:latest, ${{ env.IMAGE_NAME }}:${{ steps.version-bump.outputs.newTag }}
          # Pushed the image with `latest` tag and the new semantic version obtained from the version-bump step